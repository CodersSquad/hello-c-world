Linking Process in C
29 Jan 2019
Tags: coders, programming, c

Obed N Munoz
Cloud Software Engineer, Intel Corporation
obed.n.munoz@ [ gmail | tec ] .com
http://obedmr.com
@_obedmr


* Static Linking
An example of static linking

.code src/03/lib.c

.code src/03/static-linking.c

 gcc -c static-linking.c -o static-linking.o
 gcc -c lib.c -o lib.o
 gcc static-linking.o lib.o -o main.o
 ./main.o
 2+3=5


* Let's analyze the linking symbols

 > nm main.o
                  U _add
 0000000000000000 T _main
                  U _printf
 > nm lib.o
 0000000000000000 T _add

Let's see:
.code src/03/static-linking2.c

What happens?

* Shared or Dynamic Linking

 > ldd `which emacs`

 linux-vdso.so.1 (0x00007fff725cf000)
 libtiff.so.5 => /usr/lib/libtiff.so.5 (0x00007f46288be000)
 libjpeg.so.8 => /usr/lib/libjpeg.so.8 (0x00007f4628829000)
 libpng16.so.16 => /usr/lib/libpng16.so.16 (0x00007f46287f1000)
 libgif.so.7 => /usr/lib/libgif.so.7 (0x00007f46287e6000)
 libXpm.so.4 => /usr/lib/libXpm.so.4 (0x00007f46287d2000)
 libgtk-3.so.0 => /usr/lib/libgtk-3.so.0 (0x00007f4628088000)
 libgdk-3.so.0 => /usr/lib/libgdk-3.so.0 (0x00007f4627f8b000)
 libpango-1.0.so.0 => /usr/lib/libpango-1.0.so.0 (0x00007f4627f41000)
 libcairo.so.2 => /usr/lib/libcairo.so.2 (0x00007f4627e1a000)
 .
 .
 .

* C Standard Library
- Input and output: `<stdio.h>`
- Character Class Tests: `<ctype.h>`
- String Functions: `<string.h>`
- Mathematical Functions: `<math.h>`
- Utility functions: `<stdlib.h>`
- Diagnostics: `<assert.h>`
- Variable argument lists: `<stdarg.h>`
- Non-local jumps: `<setjmp.h>`
- Signals: `<signal.h>`
- Date and Time functions: `<time.h>`
- Implementation-defined limits: `<limits.h>` and `<float.h>`

* Let's code: Strings Manipulation library

- Implement a library for string manipulation `strlib.c` with the following functions:

 int strlen(char *str)
 *char stradd(char *origin, char *addition)
 int strfind(char *origin, char *substr)

- Call all functions from `strlib.c` library in a new `str-main.c` file

- Use the following commands for compilation and linking
 gcc -c str-main.c -o str-main.o
 gcc -c strlib.c -o strlib.o
 gcc str-main.o strlib.o -o str-final.o

- Your program needs to support the following arguments. Check the expected output:

 ./str-final.o originalVeryLongString Addition Add
 Initial Lenght      : 22
 New String          : originalVeryLongStringAddition
 SubString was found : yes

* Resources and Credits
This material is genereated thanks to some extracts from following resources:

- The C Programming Language - _Brian_ _W._ _Kernighan_
- [[https://jameshfisher.com/2017/08/26/static-linking.html][What is static linking in C?]] - _James_ _H._ _Fisher_
